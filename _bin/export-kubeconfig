#!/bin/bash

# Be strict
set -e
set -u
set -o pipefail

unset_environment() {
  echo "unset KUBECONFIG"
}

# Display usage
if [ "${#}" -gt "0" ]; then
  case "${1}" in
    -u|--unset)
      unset_environment
      exit 0
      ;;

    -v|--version)
      cat <<EOF
export-kubeconfig 0.1.0
EOF
      exit 0
      ;;

    -h|--help)
      cat <<EOF
Usage: export-kubeconfig [config_folder]
       export-kubeconfig --unset, -u
       export-kubeconfig --help, -h
       export-kubeconfig --version, -v

This bash helper will output a KUBECONFIG export statement for all files
in the specified config folder.

Optional parameter:
    [config_folder]  Path to the folder containing the kubeconfig files.
                     Default is ~/.kube/config_files

Arguments:
    -u, --unset    Unset the KUBECONFIG environment variable
    -h, --help     Display this help message and exit
    -v, --version  Display the version and exit

Examples to show output:
    export-kubeconfig
    export-kubeconfig $HOME/.kube/configuration

Example to export:
    \$(export-kubeconfig)
    \$(export-kubeconfig $HOME/.kube/configuration)

Example to unset:
    \$(export-kubeconfig -u)

EOF
      exit 0
      ;;

    *)
  esac
fi

# Input parameter
CONFIG_FOLDER="${1:-${HOME}/.kube/config_files}"

kubeconfig=

# Test if config folder is found, otherwise abort
if [ ! -d "${CONFIG_FOLDER}" ]; then
	printf "Error, config folder does not exist: %s\n" "${CONFIG_FOLDER}"
	exit 1
fi

for file in "$CONFIG_FOLDER"/*
do
    # Check if the file is a regular file
    if [[ -f "$file" ]]; then
        # Concatenate the file name with ":"
        kubeconfig+="${CONFIG_FOLDER}/${file##*/}:"
    fi
done

# Remove the trailing ":" from the concatenated string
kubeconfig="${kubeconfig%:}"

# Export the concatenated string as an environment variable
echo "export KUBECONFIG=${kubeconfig}"
